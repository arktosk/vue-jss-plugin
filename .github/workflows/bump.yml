name: Bump version

on:
  push:
    branches: 
      - master

jobs:
  bump:
    name: Bump project version
    runs-on: ubuntu-latest
    env:
      SKIP_CI_FLAG: skip CI
      PRE_RELEASE_ID: next
    if: "!contains(github.event.head_commit.message, '[skip CI]')"
    steps:
      - name: Checkout to current repository branch
        uses: actions/checkout@v1

      - name: Setup GitHub Actions local user
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Read Node.js® version from .nvmrc file
        id: nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)

      - name: Setup locked Node.js® version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvmrc.outputs.NVMRC }}"

      - id: version
        name: Bump project version
        run: |
          if ${{ github.event.ref == 'refs/heads/master' }}; then
            echo ::set-output name=NEW_VERSION::$(npm version prerelease --preid=$PRE_RELEASE_ID --no-git-tag-version)
          elif ${{ contains(github.event.ref, 'refs/heads/release') }}; then
            echo ::set-output name=NEW_VERSION::$(npm version patch --no-git-tag-version)
          fi

      - name: Commit and push new version
        run: |
          git add package.json
          git add package-lock.json
          git commit -m "[skip CI] ⚙️ Set version to ${{ steps.version.outputs.NEW_VERSION }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"

  skip:
    name: Skip CI
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip CI]')"
    steps:
      - name: Skip CI log
        run: echo "Skip CI for a '${{github.event.head_commit.message}}' commit"
